# NodePool
apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: cluster-name-nodepool
spec:
  disruption:
    consolidationPolicy: WhenEmpty
    consolidateAfter: 30s
  limits:
    cpu: "10"
  template:
    metadata:
      labels:
        eks-immersion-team: my-team
    spec:
      nodeClassRef:
        name: cluster-name
      requirements:
        - key: karpenter.k8s.aws/instance-category
          operator: In
          values: ["c", "m", "r"]
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["on-demand"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]

---

# EC2NodeClass
apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: cluster-name-ec2nodeClass
spec:
  amiFamily: AL2
  amiSelectorTerms: 
    - id: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXx
  role: karpenterNodeRole-cluster-name
  subnetSelectorTerms:
    - tags:
        alpha.eksctl.io/cluster-name: cluster-name
  securityGroupSelectorTerms:
    - tags:
        alpha.eksctl.io/cluster-name: cluster-name
  tags:
    intent: apps
    managed-by: karpenter
